{"version":3,"sources":["components/DisplayComponent.js","components/BtnComponent.js","App.js","index.js"],"names":["DisplayComponent","time","hours","minutes","seconds","BtnComponent","start","stop","reset","wait","status","onClick","className","App","useState","setTime","intervalId","intervalIdReturned","setStatus","clearInterval","clickCounter","updateSeconds","updateMinutes","updateHours","updateTime","setInterval","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAiBeA,MAbf,YAA8D,IAAD,IAAlCC,KAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAChD,OACE,gCACG,+BAAQF,GAAS,GAAMA,EAAQ,IAAMA,IADxC,YAEG,+BAAQC,GAAW,GAAMA,EAAU,IAAMA,IAF5C,YAGG,+BAAQC,GAAW,GAAMA,EAAU,IAAMA,IAH5C,eCyBWC,MA3Bf,YAA2D,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAC/C,OACE,gCACe,IAAXA,EAAgB,wBAAQC,QAASL,EAAOM,UAAU,kCAAlC,mBAAqF,GAC1F,IAAXF,EACD,gCACG,wBAAQC,QAASJ,EAAMK,UAAU,kCAAjC,kBACA,wBAAQD,QAASF,EAAOG,UAAU,qCAAlC,kBACA,wBAAQD,QAASH,EAAOI,UAAU,kCAAlC,sBACO,GAEG,IAAXF,EACF,8BACG,wBAAQC,QAASL,EAAOM,UAAU,kCAAlC,qBACM,O,MCqDDC,MAhEf,WAEE,MAAwBC,mBAAS,CAAEV,QAAQ,EAAID,QAAQ,EAAID,MAAM,IAAjE,mBAAOD,EAAP,KAAac,EAAb,KACA,EAA0CD,mBAAS,GAAnD,mBAAQE,EAAR,KAAoBC,EAApB,KACA,EAA6BH,mBAAS,GAAtC,mBAAQJ,EAAR,KAAgBQ,EAAhB,KAMMX,EAAO,WACbY,cAAcH,GACdD,EAAQ,CAAEX,QAAQ,EAAID,QAAQ,EAAID,MAAM,IACxCgB,EAAU,IAMNE,GAAe,EAcfC,EAAgBpB,EAAKG,QAASkB,EAAgBrB,EAAKE,QAASoB,EAActB,EAAKC,MAE7EsB,EAAa,WAUjB,OATqB,KAAlBH,IACDC,IACAD,EAAgB,GAEG,KAAlBC,IACDC,IACAD,EAAgB,GAElBD,IACON,EAAQ,CACbX,QAAQiB,EACRlB,QAAQmB,EACRpB,MAAMqB,KAIV,OACE,qBAAKX,UAAU,cAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAmBX,KAAMA,IACzB,cAAC,EAAD,CAAcK,MAnDZ,WACZY,EAAU,GACVD,EAAmBQ,YAAYD,EAAY,OAiDLjB,KAAMA,EAAMC,MA1CtC,WACdD,KAyCkEE,KApC9C,WAClB,IAAIW,EAKF,OAJAA,GAAe,OACfM,YAAW,WACTN,GAAe,IACd,KAGLD,cAAcH,GACdE,EAAU,IA2ByER,OAAQA,YC3D/FiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6afe979f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction DisplayComponent({time: {hours, minutes, seconds}}) {\r\n  return (\r\n    <div >\r\n       <span>{(hours >= 10) ? hours : \"0\" + hours}</span>&nbsp;:&nbsp;\r\n       <span>{(minutes >= 10) ? minutes : \"0\" + minutes}</span>&nbsp;:&nbsp;\r\n       <span>{(seconds >= 10) ? seconds : \"0\" + seconds}</span>&nbsp;&nbsp;\r\n    </div>\r\n  );\r\n}\r\nDisplayComponent.propTypes = {\r\n  time: PropTypes.object.isRequired\r\n}\r\n\r\nexport default DisplayComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction BtnComponent({start, stop, reset, wait, status}) {\r\n  return (\r\n    <div>\r\n      {(status === 0) ? <button onClick={start} className=\"stopwatch-btn stopwatch-btn-gre\">Start</button> : \"\" }\r\n      {(status === 1) ? \r\n       <div>\r\n          <button onClick={stop} className=\"stopwatch-btn stopwatch-btn-red\">Stop</button>\r\n          <button onClick={wait}  className=\"stopwatch-btn stopwatch-btn-orange\">Wait</button>\r\n          <button onClick={reset} className=\"stopwatch-btn stopwatch-btn-yel\">Reset</button>\r\n        </div> : \"\"\r\n       }\r\n       {(status === 2) ? \r\n       <div>\r\n          <button onClick={start} className=\"stopwatch-btn stopwatch-btn-gre\">Start</button>\r\n       </div> : \"\"\r\n       }\r\n      \r\n    </div>\r\n  );\r\n}\r\nBtnComponent.propTypes = {\r\n  start: PropTypes.func.isRequired,\r\n  stop: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n  wait: PropTypes.func.isRequired,\r\n  status: PropTypes.number.isRequired\r\n}\r\nexport default BtnComponent;","import React, {useState} from 'react';\n\nimport DisplayComponent from './components/DisplayComponent'\nimport BtnComponent from './components/BtnComponent'\nimport './App.css';\n\n\nfunction App() {\n\n  const [time, setTime] = useState({ seconds:0,  minutes:0,  hours:0 })\n  const [ intervalId, intervalIdReturned] = useState(0);\n  const [ status, setStatus] = useState(0);\n\n  const start = () => {\n    setStatus(1);\n    intervalIdReturned(setInterval(updateTime, 1000));\n  };\n  const stop = () => {\n  clearInterval(intervalId);\n  setTime({ seconds:0,  minutes:0,  hours:0 });\n  setStatus(2)\n  };\n  const reset = () => {\n  stop()\n  };\n\n  let clickCounter = false;\n\n  const waitHandler = () => {\n    if(!clickCounter) {\n      clickCounter = true;\n      setTimeout(() => {\n        clickCounter = false;\n      }, 300);\n      return\n    }\n    clearInterval(intervalId);\n    setStatus(2)\n  }\n\n  let updateSeconds = time.seconds, updateMinutes = time.minutes, updateHours = time.hours;\n\n  const updateTime = () => {\n    if(updateSeconds === 60) {\n      updateMinutes++;\n      updateSeconds = 0;\n    }\n    if(updateMinutes === 60) {\n      updateHours++;\n      updateMinutes = 0;\n    }\n    updateSeconds++;\n    return setTime({\n      seconds:updateSeconds, \n      minutes:updateMinutes, \n      hours:updateHours\n    })\n\n  }\n  return (\n    <div className=\"mainSection\">\n        <div className=\"clock-holder\">\n            <div className=\"stopwatch\">\n              <DisplayComponent  time={time}/>\n              <BtnComponent start={start} stop={stop} reset={reset} wait={waitHandler} status={status} />\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}